@page "/order"
@using Microsoft.AspNetCore.Components
@using TirileckWorkshop.Data.Dto
@using TirileckWorkshop.Services

<DefaultContainer WrapperClass="mt-4">
  <div class="oder-form">
    <div class="order-form-header">
      Здесь вы можете оставить заявку на ремонт
    </div>
    <div class="order-form-body">
      <EditForm Model = "_model">
        <DataAnnotationsValidator/>
        <ValidationSummary />
        <div class="row mb-3">
          <label for="FIO" class="col-sm-2 col-form-label">ФИО</label>
          <div class="col-sm-10">
            <InputText @bind-Value="_model.FIO" class="form-control" id="FIO"/>
          </div>
        </div>
        <div class="row mb-3">
          <label for="email" class="col-sm-2 col-form-label">E-mail</label>
          <div class="col-sm-10">
            <InputText type="email" @bind-Value="_model.Email" class="form-control" id="email"/>
          </div>
        </div>
        <div class="row mb-3">
          <label for="phone" class="col-sm-2 col-form-label">Телефон</label>
          <div class="col-sm-10">
            <InputText type="phone" @bind-Value="_model.PhoneNumber" class="form-control" id="phone"/>
          </div>
        </div>
        <div class="row mb-3">
          <label for="workshop" class="col-sm-2 col-form-label">Предприятие</label>
          <div class="col-sm-10">
            <InputSelect @bind-Value="_model.WorkshopId" id="workshop" class="form-select" style="width: 100%;">
              @foreach (var workshop in _workshops)
              {
                <option value="@workshop.Id">@workshop.Address</option>
              }
            </InputSelect>
          </div>
        </div>
        <div class="row mb-3">
          <label for="description" class="col-sm-2 col-form-label">Описание проблемы</label>
          <div class="col-sm-10">
            <InputTextArea @bind-Value="_model.Description" class="form-control" id="description"/>
          </div>
        </div>
        <button type="submit" class="btn btn-primary">Отправить</button>
      </EditForm>
    </div>
  </div>
 
</DefaultContainer>

@code {

  AddOrderShortDto _model = new();
  List<WorkshopDto> _workshops = new();
  
  [Inject] public WorkshopsService WorkshopsService { get; set; } 

  protected override async Task OnInitializedAsync()
  {
    _workshops = await GetWorkshops();
    
    await base.OnInitializedAsync();
  }

  async Task<List<WorkshopDto>> GetWorkshops()
  {
    return await WorkshopsService.GetWorkshops();
  }
}